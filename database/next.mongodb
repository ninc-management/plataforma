db.companies.find().forEach((company) => {
  company.logoSupport = {
    url: '',
    name: '',
  };
  db.companies.replaceOne({ _id: company._id }, company);
});

db.users.find().forEach((user) => {
  const company = db.companies.findOne();
  user.company = company;
  db.users.replaceOne({ _id: user._id }, user);
});

db.platformconfigs.find().forEach((config) => {
  config.oneDriveConfig.teamTransactions = {
    oneDriveId: '',
    folderId: '',
  };
  config.oneDriveConfig.providerFiles = {
    oneDriveId: '',
    folderId: '',
  };
  delete config.oneDriveConfig.teams;
  delete config.oneDriveConfig.providers;
  db.platformconfigs.replaceOne({ _id: config._id }, config);
});

db.teams.find().forEach((team) => {
  var i = db.transactions.estimatedDocumentCount();
  team.expenses.map((teamExpense)=>{
    i++;
    const transaction = teamExpense2Transaction(teamExpense, team._id, i);
    const result = db.transactions.insertOne(transaction);
    return result.insertedId._id;
  });
  db.teams.replaceOne({ _id: team._id }, team);
});

/**
 * Start of fullName migration
 */

db.contractors.find().forEach((contractor) => {
  contractor.name = contractor.fullName;
  delete contractor.fullName;
  if(!contractor.comercialRepresentatives) contractor.comercialRepresentatives = [];
  contractor.comercialRepresentatives.forEach((representative)=>{
      representative.name = representative.fullName;
      delete representative.fullName;
  });
  if(!contractor.legalRepresentatives) contractor.legalRepresentatives = [];
  contractor.legalRepresentatives.forEach((representative)=>{
      representative.name = representative.fullName;
      delete representative.fullName;
  });
  db.contractors.replaceOne({ _id: contractor._id }, contractor);
});

db.invoices.find().forEach((invoice) => {
  invoice.description = invoice.name;
  delete invoice.name;

  db.invoices.replaceOne({ _id: invoice._id }, invoice);
});

db.providers.find().forEach((provider) => {
  provider.bankName = provider.name;
  provider.name = provider.fullName;
  delete provider.fullName;

  db.providers.replaceOne({ _id: provider._id }, provider);
});

db.users.find().forEach((user) => {
  user.name = user.fullName;
  delete user.fullName;

  db.users.replaceOne({ _id: user._id }, user);
});

/**
 * End of fullName migration
 */